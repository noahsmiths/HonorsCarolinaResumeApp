{"version":3,"sources":["services/ResumeService.js","components/Viewer.js","components/Main.js","App.js","reportWebVitals.js","index.js"],"names":["url","getAll","axios","get","Viewer","resume","React","useState","commenter","setCommenter","message","setMessage","comments","length","forEach","comment","push","Typography","id","variant","component","name","Box","sx","position","height","width","overflowY","top","left","transform","bgcolor","border","boxShadow","style","margin","pl","pb","pt","pr","title","src","link","padding","security","TextField","label","size","onInput","e","target","value","p","Button","onClick","put","newComment","_id","then","res","color","defaultTheme","createTheme","useStyles","makeStyles","theme","root","spacing","justifyContent","display","alignItems","flexWrap","textField","breakpoints","down","marginRight","borderBottom","palette","divider","QuickSearchToolbar","props","classes","className","mt","mb","onChange","placeholder","InputProps","startAdornment","fontSize","endAdornment","IconButton","visibility","clearSearch","Main","privacy","checkBox","setCheckBox","auth","setAuth","studentAuth","setStudentAuth","superAuth","setSuperAuth","loginClose","setOpenModal","openModal","modalPost","setModalPost","modalRole","setModalRole","closeRoleDashboard","openPost","closePost","setPostError","setName","setStatus","setLink","setMajor","setTags","resumeViewer","setResumeViewer","major","tags","status","postError","searchText","setSearchText","requestSearch","searchValue","type","searchRegex","RegExp","replace","filteredRows","approved","filter","row","Object","keys","some","field","test","toString","setStudentApprovedRows","setApprovedFiltered","pending","setPendingFiltered","setApproved","setPending","studentApprovedRows","approvedFiltered","pendingFiltered","users","setRole","currentId","setCurrentId","currentResume","setCurrentResume","ssoRole","setSSORole","useEffect","fetch","json","result","userAffiliation","error","getUserData","rows","data","element","role","_role","getData","rowsApproved","rowsPending","deleteResume","delete","updateResume","viewResume","err","response","postSubmit","post","catch","roleUpdate","m","columnsPending","headerName","renderCell","col","marginLeft","columnsApproved","columnsUsers","studentApproved","AppBar","Toolbar","edge","mr","Home","flexGrow","Modal","open","onClose","FormControlLabel","control","Checkbox","checked","event","disabled","components","columns","pageSize","rowsPerPageOptions","checkboxSelection","onSelectionModelChange","componentsProps","toolbar","owsPerPageOptions","ml","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ddabf78c.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst url = \"https://honor-carolina-resume-backend-rnarveka.apps.cloudapps.unc.edu/resumes/\"\r\n\r\nexport function getAll() {\r\n    return axios.get(url)\r\n}\r\n\r\nexport function get(id) {\r\n    try{\r\n        return axios.get(url + id)\r\n    }\r\n    catch (err) {\r\n        return err.response\r\n    }\r\n}\r\n\r\nexport function post(name, link, major, tags, status) {\r\n    return axios.post(url, {\r\n            \"name\": name,\r\n            \"link\": link,\r\n            \"major\": major,\r\n            \"tags\": tags,\r\n            \"approved\": status\r\n    })\r\n}\r\n\r\nexport function del(id) {\r\n    return axios.delete(url + id)\r\n}\r\n\r\nexport function update(id) {\r\n    return axios.put(url + id, {\r\n            \"approved\": \"approved\"\r\n    })\r\n}\r\n\r\nexport function newComment(id, commenter, message) {\r\n    return axios.put(\"https://honor-carolina-resume-backend-rnarveka.apps.cloudapps.unc.edu/comment/\" + id, {\r\n        \"name\" : commenter,\r\n        \"comment\" : message\r\n    }) \r\n}\r\n","import React from 'react';\r\nimport { Typography, Box, TextField, Button } from \"@mui/material\";\r\nimport { newComment } from \"../services/ResumeService\";\r\n\r\nexport default function Viewer({resume}) {\r\n\r\n    const [commenter, setCommenter] = React.useState(\"\");\r\n    const [message, setMessage] = React.useState(\"\");\r\n\r\n\r\n    const postSubmit = () => {\r\n        newComment(resume._id, commenter, message).then(res => {\r\n            comments.push(\r\n                <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\r\n                    <strong>{commenter}</strong>: {message}\r\n                </Typography>\r\n            )\r\n        })\r\n        \r\n    }\r\n\r\n    const style = {\r\n        position: 'absolute',\r\n        height: 500,\r\n        width: 550,\r\n        overflowY: 'scroll',\r\n        top: '50%',\r\n        left: '50%',\r\n        transform: 'translate(-50%, -50%)',\r\n        bgcolor: 'background.paper',\r\n        border: '2px solid #000',\r\n        boxShadow: 24,\r\n    };\r\n\r\n    let comments = [];\r\n\r\n    if(resume.comments.length !== 0) {\r\n        resume.comments.forEach(comment => {\r\n            comments.push(\r\n                <Typography id=\"modal-modal-title\" variant=\"p\" component=\"p\">\r\n                    <strong>{comment.name}</strong>: {comment.comment}\r\n                </Typography>\r\n            )\r\n        })\r\n    } else {\r\n        comments.push(\r\n            <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\r\n                <strong>There are no comments for this resume.</strong>\r\n            </Typography>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Box sx={style} style={{margin: \"auto\"}}>\r\n            <Typography id=\"modal-modal-title\" variant=\"h2\" component=\"h2\" pl={2} pb={1} pt={2} pr={2}>\r\n                {resume.name}\r\n            </Typography>\r\n            <Box pr={2} pl={2}>\r\n            <iframe title=\"resume\" src={resume.link} height=\"200\" width=\"500\" style={{padding: 2}}></iframe>\r\n            </Box>\r\n            <Typography id=\"modal-modal-title\" variant=\"h4\" component=\"h4\" pl={2} pb={1} pt={2} pr={2}>\r\n                Comments\r\n            </Typography>\r\n            <Box id =\"comment-holder\" pr={2} pl={2}>\r\n                {comments}\r\n            </Box>\r\n            <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h6\" pl={2} pb={1} pt={2} pr={2}security=''>\r\n                New Comment\r\n            </Typography>\r\n            <Box pr={2} pl={2}>\r\n                <TextField id=\"commenter\" label=\"Name\" variant=\"outlined\" size=\"small\" pr={2} onInput={e => setCommenter(e.target.value)}/>\r\n                <TextField id=\"message\" label=\"Comment\" variant=\"outlined\" size=\"small\" onInput={e => setMessage(e.target.value)}/>\r\n            </Box>\r\n            <Box p={2}>\r\n                <Button onClick={postSubmit} color=\"inherit\" p={2}>Post</Button>\r\n            </Box>\r\n        </Box>\r\n    )\r\n}","import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport Unauthenticated from \"./Unauthenticated\";\r\nimport Viewer from \"./Viewer\";\r\nimport { AppBar, Toolbar, Typography, Modal, Box, TextField, Button, IconButton, FormControlLabel, Checkbox } from \"@mui/material\";\r\nimport { Home } from \"@mui/icons-material\";\r\nimport { DataGrid } from \"@mui/x-data-grid\";\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport { createTheme } from '@material-ui/core/styles';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { getAll, post, update, del, get } from \"../services/ResumeService\";\r\n\r\n// Data Grid Toolbar styles\r\nfunction escapeRegExp(value) {\r\n    return value.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\r\n}\r\nconst defaultTheme = createTheme();\r\nconst useStyles = makeStyles(\r\n    (theme) => ({\r\n        root: {\r\n            padding: theme.spacing(0.5, 0.5, 0),\r\n            justifyContent: 'space-between',\r\n            display: 'flex',\r\n            alignItems: 'flex-start',\r\n            flexWrap: 'wrap',\r\n        },\r\n        textField: {\r\n            [theme.breakpoints.down('xs')]: {\r\n                width: '100%',\r\n            },\r\n            margin: theme.spacing(1, 0.5, 1.5),\r\n            '& .MuiSvgIcon-root': {\r\n                marginRight: theme.spacing(0.5),\r\n            },\r\n            '& .MuiInput-underline:before': {\r\n                borderBottom: `1px solid ${theme.palette.divider}`,\r\n            },\r\n        },\r\n    }),\r\n    { defaultTheme },\r\n);\r\n\r\n// Search Toolbar Code\r\nQuickSearchToolbar.propTypes = {\r\n    clearSearch: PropTypes.func.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n    value: PropTypes.string.isRequired,\r\n};\r\nfunction QuickSearchToolbar(props) {\r\n    const classes = useStyles();\r\n    return (\r\n        <div className={classes.root}>\r\n            <Typography mt={2} mb={2} pb={3} id=\"modal-modal-title\" variant=\"h6\" component=\"h5\">\r\n                Search\r\n            </Typography>\r\n            <TextField variant=\"standard\" value={props.value} onChange={props.onChange} placeholder=\"Search…\" className={classes.textField}\r\n                InputProps={{\r\n                    startAdornment: <SearchIcon fontSize=\"small\" />, endAdornment: (\r\n                        <IconButton title=\"Clear\" aria-label=\"Clear\" size=\"small\" style={{ visibility: props.value ? 'visible' : 'hidden' }} onClick={props.clearSearch}>\r\n                            <ClearIcon fontSize=\"small\" />\r\n                        </IconButton>),\r\n                }}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default function Main() {\r\n\r\n    //State handlers for checkbox's\r\n    const [checkBox, setCheckBox] = React.useState({\r\n        privacy: false\r\n    })\r\n    const handleChange = (event) => {\r\n        setCheckBox({\r\n            ...checkBox,\r\n            [event.target.name]: event.target.checked,\r\n        });\r\n    };\r\n    const { privacy } = checkBox;\r\n\r\n    // auth values, auth will be true for admin, studentAuth will be true for studentAuth, superAuth will be true for superUser\r\n    const [auth, setAuth] = React.useState(false);\r\n    const [studentAuth, setStudentAuth] = React.useState(true);\r\n    const [superAuth, setSuperAuth] = React.useState(false);\r\n    const logIn = () => { setAuth(true) };\r\n    const studentLogIn = () => { setStudentAuth(true); setStatus(\"pending\"); }\r\n    const superLogIn = () => { setSuperAuth(true) };\r\n    const logOut = () => {\r\n        setAuth(false);\r\n        setStudentAuth(false);\r\n        setSuperAuth(false);\r\n    };\r\n\r\n    //Modal handlers\r\n    const loginOpen = () => setOpenModal(true);\r\n    const loginClose = () => setOpenModal(false);\r\n    const [openModal, setOpenModal] = React.useState(false);\r\n    const [modalPost, setModalPost] = React.useState(false);\r\n    const [modalRole, setModalRole] = React.useState(false);\r\n    const openRoleDashboard = () => setModalRole(true);\r\n    const closeRoleDashboard = () => setModalRole(false);\r\n    const openPost = () => setModalPost(true);\r\n    const closePost = () =>  { setModalPost(false); setPostError(null);  setName(null); setStatus(\"pending\");\r\n        setLink(null); setMajor(null); setTags(null);};\r\n    const viewerOpen = () => setResumeViewer(true);\r\n    const viewerClose = () => setResumeViewer(false);\r\n    const [resumeViewer, setResumeViewer] = React.useState(false);\r\n\r\n    //Form value handlers\r\n    const [name, setName] = React.useState(null);\r\n    const [link, setLink] = React.useState(null);\r\n    const [major, setMajor] = React.useState(null);\r\n    const [tags, setTags] = React.useState(null);\r\n    const [status, setStatus] = React.useState(\"pending\");\r\n    const [postError, setPostError] = React.useState(null);\r\n\r\n    //Form Submit Actions\r\n    const adminSubmit = () => {\r\n        getData();\r\n        loginClose();\r\n        logIn();\r\n    }\r\n    const studentSubmit = () => {\r\n        getData();\r\n        loginClose();\r\n        studentLogIn();\r\n    }\r\n    const superSubmit = () => {\r\n        getUserData();\r\n        loginClose();\r\n        superLogIn();\r\n    }\r\n    //Search function for data grid\r\n    const [searchText, setSearchText] = React.useState('');\r\n    const requestSearch = (searchValue, type) => {\r\n        setSearchText(searchValue);\r\n        const searchRegex = new RegExp(escapeRegExp(searchValue), 'i');\r\n        if (type === \"student\") {\r\n            const filteredRows = approved.filter((row) => {\r\n                return Object.keys(row).some((field) => {\r\n                    return searchRegex.test(row[field].toString());\r\n                });\r\n            });\r\n            setStudentApprovedRows(filteredRows);\r\n        } else if (type === \"approved\") {\r\n            const filteredRows = approved.filter((row) => {\r\n                return Object.keys(row).some((field) => {\r\n                    return searchRegex.test(row[field].toString());\r\n                });\r\n            });\r\n            setApprovedFiltered(filteredRows);\r\n        } else {\r\n            const filteredRows = pending.filter((row) => {\r\n                return Object.keys(row).some((field) => {\r\n                    return searchRegex.test(row[field].toString());\r\n                });\r\n            });\r\n            setPendingFiltered(filteredRows);\r\n        }\r\n    };\r\n\r\n    //set data grid rows for each table\r\n    const [approved, setApproved] = React.useState(null);\r\n    const [pending, setPending] = React.useState(null);\r\n    const [studentApprovedRows, setStudentApprovedRows] = React.useState();\r\n    const [approvedFiltered, setApprovedFiltered] = React.useState(approved);\r\n    const [pendingFiltered, setPendingFiltered] = React.useState(pending);\r\n    const [users, setRole] = React.useState(null);\r\n\r\n    //set last checked row\r\n    const [currentId, setCurrentId] = React.useState(null);\r\n    const [currentResume, setCurrentResume] = React.useState(null);\r\n\r\n    //Check for affiliation\r\n    const [ssoRole, setSSORole] = React.useState(\"\");\r\n\r\n    React.useEffect(() => {\r\n        fetch(\"/user/affiliation\")\r\n        .then(res => res.json())\r\n        .then((result) => {\r\n            setSSORole(result.userAffiliation);\r\n        },\r\n        (error) => {\r\n            setSSORole(\"error\");\r\n            });\r\n        },\r\n    []);\r\n\r\n    //api functions\r\n    const getUserData = () => {\r\n        getAll().then(res => {\r\n            let rows = [];\r\n            res.data.forEach(element =>{\r\n                rows.push({id: element._id, role: element._role})\r\n            });\r\n        \r\n        // setRole(rows);\r\n        setRole([{\"id\":\"62103d57f5d6c38b682beef5\",\"firstName\":\"Jack\",\"lastName\":\"Benson\",\"role\":1,\"roleName\":\"Student\"},{\"id\":\"62103de1f5d6c38b682beef6\",\"firstName\":\"Ron\",\"lastName\":\"Johnson\",\"role\":2,\"roleName\":\"Reviewer\"},{\"id\":\"62103df5f5d6c38b682beef7\",\"firstName\":\"Foo\",\"lastName\":\"Barson\",\"role\":3,\"roleName\":\"Administrator\"},{\"id\":\"62103e10f5d6c38b682beef8\",\"firstName\":\"Kevin\",\"lastName\":\"Guskiewicz\",\"role\":4,\"roleName\":\"Super User\"}])\r\n        })\r\n    }\r\n    const getData = () => {\r\n        getAll().then(res => {\r\n            let rowsApproved = [];\r\n            let rowsPending = [];\r\n            res.data.forEach(element => {\r\n                if (element.approved === \"approved\") {\r\n                    rowsApproved.push({\r\n                        id: element._id,\r\n                        name: element.name,\r\n                        major: element.major,\r\n                        resume: element.link,\r\n                        tags: element.tags\r\n                    })\r\n                } else {\r\n                    rowsPending.push({\r\n                        id: element._id,\r\n                        name: element.name,\r\n                        major: element.major,\r\n                        resume: element.link\r\n                    })\r\n                }\r\n            });\r\n            setApproved(rowsApproved);\r\n            setStudentApprovedRows(rowsApproved);\r\n            setApprovedFiltered(rowsApproved)\r\n            setPending(rowsPending);\r\n            setPendingFiltered(rowsPending)\r\n        })\r\n    }\r\n    const deleteResume = () => {\r\n        del(currentId).then(res => {\r\n            setCurrentId(null);\r\n            getData();\r\n        })\r\n    }\r\n    const updateResume = () => {\r\n        update(currentId).then(res => {\r\n            setCurrentId(null);\r\n            getData();\r\n        })\r\n    }\r\n\r\n    const viewResume = () => {\r\n        get(currentId).then(res => {\r\n            setCurrentResume(res.data);\r\n            viewerOpen();\r\n        })\r\n    }\r\n\r\n    const postSubmit = () => {\r\n        post(name, link, major, tags, status).then(res => {\r\n            closePost();\r\n            getData();\r\n        }).catch(e => {\r\n            setPostError(\"Please ensure that name, link, major, comma or space separated tags, and appropriate status is set for resumes!\");\r\n        })\r\n    }\r\n    const roleUpdate = () => {\r\n        closeRoleDashboard();\r\n    }\r\n    //Data Grid Styling\r\n    const style = {\r\n        position: 'absolute',\r\n        top: '50%',\r\n        left: '50%',\r\n        transform: 'translate(-50%, -50%)',\r\n        width: 400,\r\n        bgcolor: 'background.paper',\r\n        border: '2px solid #000',\r\n        boxShadow: 24,\r\n        p: 4,\r\n        '& > :not(style)': { m: 1, width: '25ch' }\r\n    };\r\n\r\n    //Column setup for Pending DataGrid\r\n    const columnsPending = [\r\n        { field: 'id', headerName: 'ID', width: 100 },\r\n        { field: 'name', headerName: 'Name', width: 150 },\r\n        { field: 'major', headerName: 'Major', width: 200 },\r\n        {\r\n            field: 'resume', headerName: 'Resume', width: 275,\r\n            renderCell: (col) => (\r\n                <strong>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        size=\"small\"\r\n                        style={{ marginLeft: 16 }}\r\n                        onClick={viewResume}\r\n                        target=\"_blank\">View</Button>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        size=\"small\"\r\n                        style={{ marginLeft: 16 }}\r\n                        onClick={updateResume}>Accept</Button>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        size=\"small\"\r\n                        style={{ marginLeft: 16 }}\r\n                        onClick={deleteResume}>Reject</Button>\r\n                </strong>\r\n            )\r\n        },\r\n    ];\r\n\r\n    //Column setup for Approved DataGrid\r\n    const columnsApproved = [\r\n        { field: 'id', headerName: 'ID', width: 100 },\r\n        { field: 'name', headerName: 'Name', width: 150 },\r\n        { field: 'major', headerName: 'Major', width: 200 },\r\n        {\r\n            field: 'resume', headerName: 'Resume', width: 195,\r\n            renderCell: (col) => (\r\n                <strong>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        size=\"small\"\r\n                        onClick={viewResume}\r\n                        target=\"_blank\"\r\n                        style={{ marginLeft: 16 }}>View</Button>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        size=\"small\"\r\n                        style={{ marginLeft: 16 }}\r\n                        onClick={deleteResume}>Delete</Button>\r\n                </strong>\r\n            )\r\n        },\r\n        { field: 'tags', headerName: 'Tags', width: 400 }\r\n    ];\r\n    const columnsUsers = [\r\n        { field: 'id', headerName: 'ID', width: 100 },\r\n        {field: 'firstName', headerName: 'FIRST', width: 150},\r\n        {field: 'lastName', headerName: 'LAST', width: 150},\r\n        {field: 'role', headerName: 'ROLE', width: 150},\r\n        {field: 'roleName', headerName: 'CHANGE ROLE', width: 300,\r\n        renderCell: (col) => (\r\n            <strong>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    size=\"small\"\r\n                    style={{ marginLeft: 16 }}\r\n                    onClick={roleUpdate}>Promote</Button>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    size=\"small\"\r\n                    style={{ marginLeft: 16 }}\r\n                    onClick={roleUpdate}>Demote</Button>\r\n            </strong>\r\n        )},\r\n\r\n    ]\r\n    //Column setup for Student DataGrid\r\n    const studentApproved = [\r\n        { field: 'id', headerName: 'ID', width: 100 },\r\n        { field: 'name', headerName: 'Name', width: 150 },\r\n        { field: 'major', headerName: 'Major', width: 200 },\r\n        {\r\n            field: 'resume', headerName: 'Resume', width: 195,\r\n            renderCell: (col) => (\r\n                <strong>\r\n                    <Button\r\n                        onClick={viewResume}\r\n                        target=\"_blank\"\r\n                        variant=\"contained\"\r\n                        size=\"small\"\r\n                        style={{ marginLeft: 16 }}>View</Button>\r\n                </strong>\r\n            )\r\n        },\r\n        { field: 'tags', headerName: 'Tags', width: 400 }\r\n    ];\r\n\r\n    React.useEffect(() => {\r\n        getData();\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <header>\r\n                <AppBar>\r\n                    <Toolbar>\r\n                        <IconButton size=\"large\" edge=\"start\" color=\"inherit\" aria-label=\"menu\" sx={{ mr: 2 }}><Home /></IconButton>\r\n                        <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\r\n                            Honors Carolina Resume App\r\n                        </Typography>\r\n                        <Button onClick={(auth || studentAuth) ? logOut : loginOpen} color=\"inherit\" title=\"loginButton\">{(auth || studentAuth) ? `Logout (${ssoRole})` : \"Login\"}</Button>\r\n                    </Toolbar>\r\n                </AppBar>\r\n                <Modal open={openModal} onClose={loginClose}>\r\n                    <Box sx={style} component=\"form\">\r\n                        <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\r\n                            Login\r\n                        </Typography>\r\n                        <TextField id=\"user\" label=\"Username\" variant=\"outlined\" />\r\n                        <TextField id=\"pass\" label=\"Password\" variant=\"outlined\" type=\"password\" />\r\n                        <Button onClick={adminSubmit} color=\"inherit\">Admin</Button>\r\n                        <Button onClick={studentSubmit} color=\"inherit\">Student</Button>\r\n                        <Button onClick={superSubmit} color=\"inherit\">SuperUser</Button>\r\n                    </Box>\r\n                </Modal>\r\n                <Modal open={modalPost} onClose={closePost}>\r\n                    <Box sx={style} component=\"form\">\r\n                        <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\"> New Resume </Typography>\r\n                        <TextField id=\"name\" label=\"Name\" variant=\"outlined\" onInput={e => setName(e.target.value)} />\r\n                        <TextField id=\"link\" label=\"Resume Link\" variant=\"outlined\" onInput={e => setLink(e.target.value)} />\r\n                        <TextField id=\"tag\" label=\"Tags\" variant=\"outlined\" onInput={e => setTags(e.target.value)} />\r\n                        {auth && <TextField id=\"status\" label=\"Approved/Pending\" variant=\"outlined\" onInput={e => setStatus(e.target.value)} />}\r\n                        {superAuth && <TextField id=\"status\" label=\"Approved/Pending\" variant=\"outlined\" onInput={e => setStatus(e.target.value)} />}\r\n                        <TextField id=\"major\" label=\"Major\" variant=\"outlined\" onInput={e => setMajor(e.target.value)} />\r\n                        {studentAuth && <FormControlLabel control={<Checkbox checked={privacy} onChange={handleChange} name=\"privacy\" />} label=\"By checking this box you agree to all privacy policies.\" />}\r\n\r\n                        {postError && <Typography color=\"common.red\">{postError}</Typography>}\r\n                        {auth && <Button onClick={postSubmit} color=\"inherit\">Post Resume</Button>}\r\n                        {studentAuth && <Button disabled={!privacy} onClick={postSubmit} color=\"inherit\">Post Resume</Button>}\r\n                    </Box>\r\n                </Modal>\r\n                <Modal open={modalRole} onClose={closeRoleDashboard}>\r\n                    <Box sx={style} component=\"form\">\r\n                        {postError && <Typography color=\"common.red\">{postError}</Typography>}\r\n                        {<Button onClick={roleUpdate} color=\"inherit\">Update Role</Button>}\r\n                    </Box>\r\n                </Modal>\r\n            </header>\r\n            <Modal open={resumeViewer} onClose={viewerClose}>\r\n                <Viewer resume={currentResume}></Viewer>\r\n            </Modal>\r\n            {/* !auth && !studentAuth && !superAuth && <Unauthenticated></Unauthenticated> */}\r\n\r\n            {/* STUDENT USER VIEW */}\r\n            {/* This view will allow students to search resumes, and upload their own */}\r\n            {/* Students will have Read and Updates access to all resume tables */}\r\n            {studentAuth && <Box m={6} pl={4} pr={4}>\r\n                <Box mt={2} mb={2} pt={4}>\r\n                    <Button onClick={openPost} color=\"inherit\">Add Resume</Button>\r\n                </Box>\r\n                <Typography mt={2} mb={2} pb={3} id=\"modal-modal-title\" variant=\"h6\" component=\"h5\">\r\n                    Student Resumes\r\n                </Typography>\r\n                {approved != null &&\r\n                    <div style={{ height: 400, width: '100%' }}>\r\n                        <DataGrid components={{ Toolbar: QuickSearchToolbar }} rows={studentApprovedRows == null ? approved : studentApprovedRows}\r\n                            columns={studentApproved} pageSize={5} rowsPerPageOptions={[5]} checkboxSelection\r\n                            onSelectionModelChange={(id) => { setCurrentId(id[id.length - 1]) }} pb={2}\r\n                            componentsProps={{\r\n                                toolbar: {\r\n                                    value: searchText,\r\n                                    onChange: (event) => requestSearch(event.target.value, \"student\"),\r\n                                    clearSearch: () => requestSearch('', \"student\"),\r\n                                },\r\n                            }} />\r\n                    </div>}\r\n            </Box>}\r\n\r\n            {/* ADMIN USER VIEW */}\r\n            {/* This view will show all approved and pending resumes */}\r\n            {/* ADMINs will have CRUD access to all resume tables */}\r\n            {auth && <Box m={6} pl={4} pr={4}>\r\n                <Box mt={2} mb={2} pt={4}>\r\n                    <Button onClick={openPost} color=\"inherit\">Add Resume</Button>\r\n                </Box>\r\n                <Typography mt={2} mb={2} pb={3} id=\"modal-modal-title\" variant=\"h6\" component=\"h5\">\r\n                    Approved Resumes\r\n                </Typography>\r\n                {approved != null &&\r\n                    <div style={{ height: 400, width: '100%' }}>\r\n                        <DataGrid\r\n                            components={{ Toolbar: QuickSearchToolbar }} rows={approvedFiltered == null ? approved : approvedFiltered}\r\n                            columns={columnsApproved} pageSize={5} owsPerPageOptions={[5]} checkboxSelection\r\n                            onSelectionModelChange={(id) => { setCurrentId(id[id.length - 1]) }} pb={2}\r\n                            componentsProps={{\r\n                                toolbar: {\r\n                                    value: searchText,\r\n                                    onChange: (event) => requestSearch(event.target.value, \"approved\"),\r\n                                    clearSearch: () => requestSearch('', \"approved\"),\r\n                                },\r\n                            }} />\r\n                    </div>}\r\n                <Typography mt={2} mb={2} pb={3} pt={3} id=\"modal-modal-title\" variant=\"h6\" component=\"h5\">\r\n                    Pending Resumes\r\n                </Typography>\r\n                {pending != null &&\r\n                    <div style={{ height: 400, width: '100%' }}>\r\n                        <DataGrid\r\n                            components={{ Toolbar: QuickSearchToolbar }} rows={pendingFiltered == null ? pending : pendingFiltered}\r\n                            columns={columnsPending} pageSize={5} rowsPerPageOptions={[5]} checkboxSelection\r\n                            onSelectionModelChange={(id) => { setCurrentId(id[id.length - 1]) }} pb={2}\r\n                            componentsProps={{\r\n                                toolbar: {\r\n                                    value: searchText,\r\n                                    onChange: (event) => requestSearch(event.target.value, \"pending\"),\r\n                                    clearSearch: () => requestSearch('', \"pending\"),\r\n                                },\r\n                            }} />\r\n                    </div>}\r\n\r\n            </Box>}\r\n            {/* SUPERUSER VIEW */}\r\n            {superAuth && <Box m={6} pl={4} pr={4}>\r\n            <br></br>\r\n                <Typography mt={2} mb={2} pb={3} id=\"modal-modal-title\" variant=\"h6\" component=\"h5\">\r\n                    Users\r\n                </Typography>\r\n                {users != null &&\r\n                    <div style={{ height: 400, width: '100%' }}>\r\n                        <DataGrid\r\n                            rows={users}\r\n                            columns={columnsUsers} pageSize={5} owsPerPageOptions={[5]} checkboxSelection\r\n                            onSelectionModelChange={(id) => { setCurrentId(id[id.length - 1]) }} pb={2}\r\n                            />\r\n                    </div>}\r\n\r\n            </Box>}\r\n            \r\n            <footer>\r\n                <Box bgcolor=\"#2196f3\" color=\"white\" pl={4} pr={4}>\r\n                    <Box ml={2} mr={2} borderBottom={1} p={1}>\r\n                        <Typography mt={2} id=\"modal-modal-title\" variant=\"h6\" component=\"h5\">\r\n                            About\r\n                        </Typography>\r\n                    </Box>\r\n                    <Box ml={2} mr={2} pl={1} pr={1}>COMP 523 Project</Box>\r\n                    <Box ml={2} mr={2} pl={1} pr={1} pb={3}>Client: Honors Carolina</Box>\r\n                </Box>\r\n            </footer>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n","import Main from './components/Main';\r\nimport { Box } from '@mui/system';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  return (\r\n      <Box>\r\n        <Main/>\r\n      </Box>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}